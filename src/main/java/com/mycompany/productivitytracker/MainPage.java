/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.productivitytracker;

import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;
import java.util.Date;



public class MainPage extends javax.swing.JFrame {
     
     private Date[] dateArray = new Date[3]; // Array untuk menyimpan waktu mulai dan berhenti produksi
    private int flag = 0; // Flag untuk menunjukkan status produksi
    private long lastStop = 0; // Menyimpan waktu yang sudah berlalu sejak mulai produksi
     private long elapsedTime = 0;
    
    
    public MainPage() {
        initComponents();
        time();
            }
   
    
    public void time() {
        DateTimeFormatter times =DateTimeFormatter .ofPattern("hh:mm a");
        LocalTime now =LocalTime.now();
        startTime.setText(times.format(now));
        startTime.setEditable(false);
    }
    
       private boolean checkValidTime(String time) {
        try {
            LocalTime.parse(time, DateTimeFormatter.ofPattern("hh:mm a"));
            return true;
        } catch (DateTimeParseException e) {
            return false;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startLabel = new javax.swing.JLabel();
        prodLabel = new javax.swing.JLabel();
        stopLabel = new javax.swing.JLabel();
        goBtn = new javax.swing.JButton();
        prodStart = new javax.swing.JButton();
        prodStop = new javax.swing.JButton();
        stopBtn = new javax.swing.JButton();
        doneByLabel = new javax.swing.JLabel();
        stopTime = new javax.swing.JFormattedTextField();
        startTime = new javax.swing.JFormattedTextField();
        timeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startLabel.setText("Start :");

        prodLabel.setText("Productivity Meter");

        stopLabel.setText("Stop :");

        goBtn.setBackground(new java.awt.Color(255, 255, 0));
        goBtn.setText("Go");
        goBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBtnActionPerformed(evt);
            }
        });

        prodStart.setBackground(new java.awt.Color(255, 255, 0));
        prodStart.setText("Start Working");
        prodStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodStartActionPerformed(evt);
            }
        });

        prodStop.setBackground(new java.awt.Color(255, 255, 0));
        prodStop.setText("Stop Working");
        prodStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodStopActionPerformed(evt);
            }
        });

        stopBtn.setBackground(new java.awt.Color(255, 255, 0));
        stopBtn.setText("End");
        stopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBtnActionPerformed(evt);
            }
        });

        doneByLabel.setText("You'll be done by:");

        stopTime.setText("hh : mm a");
        stopTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopTimeActionPerformed(evt);
            }
        });

        startTime.setText("hh : mm a");
        startTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTimeActionPerformed(evt);
            }
        });

        timeLabel.setText("hh : mm a");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prodLabel)
                            .addComponent(prodStop)
                            .addComponent(prodStart))
                        .addContainerGap(606, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(doneByLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timeLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stopLabel)
                                .addGap(31, 31, 31)
                                .addComponent(stopTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(startLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(startTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(goBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(495, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startLabel)
                    .addComponent(goBtn)
                    .addComponent(startTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doneByLabel)
                    .addComponent(timeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(prodLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(prodStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prodStop)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopLabel)
                    .addComponent(stopTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopBtn))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void goBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBtnActionPerformed
     String userStart = startTime.getText();
        if (checkValidTime(userStart)) {
            LocalTime parsedStartTime = LocalTime.parse(userStart, DateTimeFormatter.ofPattern("hh:mm a"));
            if (parsedStartTime.isBefore(LocalTime.now())) {
                // Menyimpan waktu mulai pada array dateArray
                dateArray[0] = new Date();
                // Menonaktifkan tombol "Go"
                goBtn.setEnabled(false);
                // Mengaktifkan tombol "Start Working"
                prodStart.setEnabled(true);
                // Mengaktifkan tombol "End"
                stopBtn.setEnabled(true);
              
            } else {
                JOptionPane.showMessageDialog(this, "Start Time cannot be in the future", "Invalid Start Time!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Format must be hh:mm AM|PM\nMust be in 12-hour notation", "Invalid Start Time!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_goBtnActionPerformed

    private void prodStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodStopActionPerformed
    if (dateArray[0] != null) { // Jika tombol "prodStart" pernah ditekan sebelumnya
        // Menyimpan waktu berhenti produksi pada array dateArray
        dateArray[1] = new Date();
        // Menonaktifkan tombol "Stop Working"
        prodStop.setEnabled(false);
        // Mengaktifkan tombol "Start Working"
        prodStart.setEnabled(true);
        // Mengaktifkan tombol "End"
        stopBtn.setEnabled(true);
        // Menyimpan waktu terakhir ketika tombol "prodStop" ditekan
        lastStop = System.currentTimeMillis();
        
         long elapsedSeconds = (lastStop - dateArray[0].getTime()) / 1000;
        System.out.println("Elapsed time: " + elapsedSeconds + " seconds");
        // Display message showing elapsed time
        JOptionPane.showMessageDialog(this, "Production Stopped", "Production Stopped", JOptionPane.INFORMATION_MESSAGE);
    } else {
        // Tampilkan pesan kesalahan jika tombol "prodStart" belum pernah ditekan
        JOptionPane.showMessageDialog(this, "Please start working before stopping.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_prodStopActionPerformed

    private void prodStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodStartActionPerformed
      // Update the start time to the current time
    if (flag == 2) { // Jika sedang dalam mode jeda
        // Hitung waktu elapsed sejak tombol "prodStop" terakhir ditekan
        elapsedTime += (System.currentTimeMillis() - lastStop);
    } else {
        dateArray[0] = new Date(); // Set waktu mulai baru
    }
    // Menyimpan waktu mulai produksi pada array dateArray
    dateArray[0] = new Date();
    // Menandai bahwa aplikasi berada dalam mode produksi
    flag = 1;
    // Menonaktifkan tombol "Start Working"
    prodStart.setEnabled(false);
    // Mengaktifkan tombol "Stop Working"
    prodStop.setEnabled(true);
   
    }//GEN-LAST:event_prodStartActionPerformed

    private void stopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBtnActionPerformed
    if (dateArray[0] != null && dateArray[1] != null) { // Jika tombol "prodStart" dan "prodStop" pernah ditekan
        // Hitung total waktu yang sudah berlalu
        long totalTime = dateArray[1].getTime() - dateArray[0].getTime();
        long elapsedSeconds = (totalTime + elapsedTime) / 1000;
        // Tampilkan pesan dengan waktu total yang sudah berlalu
        JOptionPane.showMessageDialog(this, "Total Elapsed time: " + elapsedSeconds + " seconds", "Production Ended", JOptionPane.INFORMATION_MESSAGE);
        // Reset semua variabel keadaan
        elapsedTime = 0;
        dateArray[0] = null;
        dateArray[1] = null;
        lastStop = 0;
        // Reset waktu mulai
        startTime.setText(LocalTime.now().format(DateTimeFormatter.ofPattern("hh:mm a")));
        // Aktifkan tombol "Start Working" dan nonaktifkan tombol "End" dan "Stop Working"
        prodStart.setEnabled(false);
        goBtn.setEnabled(true);
        prodStop.setEnabled(false);
        stopBtn.setEnabled(false);
        
        // Update stopTime text field with the current time
        stopTime.setText(LocalTime.now().format(DateTimeFormatter.ofPattern("hh:mm a")));
    } else {
        // Tampilkan pesan kesalahan jika tombol "prodStart" atau "prodStop" belum pernah ditekan
        JOptionPane.showMessageDialog(this, "Please start and stop working before ending production.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    }//GEN-LAST:event_stopBtnActionPerformed

    private void stopTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopTimeActionPerformed
 
   
    }//GEN-LAST:event_stopTimeActionPerformed

    private void startTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startTimeActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel doneByLabel;
    private javax.swing.JButton goBtn;
    private javax.swing.JLabel prodLabel;
    private javax.swing.JButton prodStart;
    private javax.swing.JButton prodStop;
    private javax.swing.JLabel startLabel;
    private javax.swing.JFormattedTextField startTime;
    private javax.swing.JButton stopBtn;
    private javax.swing.JLabel stopLabel;
    private javax.swing.JFormattedTextField stopTime;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
